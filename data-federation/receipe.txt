git clone https://github.com/rareddy/docker-quickstarts.git

cd docker-quickstarts/data-federation

# get JDBC URL for the MariaDB
wget -O data/mariadb/mariadb-java-client-1.1.8.jar https://downloads.mariadb.org/interstitial/client-java-1.1.8/mariadb-java-client-1.1.8.jar

# Get the configuration directory of the Teiid into Host container
docker pull teiid/teiid:8.10.0.CR2

docker run -d --name=teiid810 teiid/teiid:8.10.0.CR2

docker cp teiid810:/opt/jboss/jboss-eap-6.3/standalone teiid810

docker kill teiid810
docker rm teiid810

# create and setup MariaDB
docker pull mariadb:latest

docker create --privileged=true -t -i \
    -v `pwd`/data/mariadb:/opt/jboss/data-federation/data/mariadb \
    -e MYSQL_ROOT_PASSWORD=mypass \
    -e MYSQL_USER=user \
    -e MYSQL_PASSWORD=mypass \
    -e MYSQL_DATABASE=accounts \
    --name=accounts mariadb

docker start accounts

docker exec -ti accounts bash

#set up database
mysql -u user -p accounts < /opt/jboss/data-federation/data/mariadb/accounts.sql
# supply password as "mypass", my efforts to include on the cmd did not work.
# exit from shell

#create docker container for Teiid
docker create --privileged=true -t -i -P \
    -v `pwd`/teiid810/standalone:/opt/jboss/jboss-eap-6.3/standalone \
    -v `pwd`:/opt/jboss/data-federation \
    --name=teiid810 \
    --link accounts:accounts \
    teiid/teiid:8.10.0.CR2

docker start teiid810

#add management user
docker exec -ti teiid810 /opt/jboss/jboss-eap-6.3/bin/add-user.sh

#add application user(choose "odata,rest" as groups)
docker exec -ti teiid810 /opt/jboss/jboss-eap-6.3/bin/add-user.sh

# lets create data sources and deploy the VDB
docker exec -ti teiid810 /opt/jboss/jboss-eap-6.3/bin/jboss-cli.sh --file=/opt/jboss/data-federation/setup.cli

# List all the ports
docker port teiid810

# now using the port forwarding listed for 31000, use a JDBC client to connect to "portfolio" VDB using Teiid JDBC driver and issue any relevent SQL queries. For ex:
    SELECT ACCOUNT_ID,PORTFOLIO_VALUE FROM "Stocks"."PersonalHoldings";

#useful commands
docker rm $(docker ps -aq) -- remove all the dead containers
